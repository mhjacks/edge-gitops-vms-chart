{{- $def := .Values.vmDefaults }}
{{- range $vm, $vmr := .Values.vms }}
---
apiVersion: "external-secrets.io/v1beta1"
kind: ExternalSecret
metadata:
  name: es-cloudinit-{{ $vmr.role }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  refreshInterval: 90s
  secretStoreRef:
    name: {{ $.Values.secretStore.name }}
    kind: {{ $.Values.secretStore.kind }}
  target:
    name: cloudinit-{{ $vmr.role }}
    template:
  dataFrom:
    - extract:
        key: {{ coalesce $vmr.cloudinitsecret $def.cloudinitsecret }}
{{- $ctr := int (coalesce $vmr.count $def.count) }}
{{- range $i := until $ctr }}
{{- $idx := printf "%03d" (add $i 1) }}
{{- $identifier := printf "%s-%s-%s" (coalesce $vmr.os $def.os) $vmr.role $idx }}
---
apiVersion: "external-secrets.io/v1beta1"
kind: ExternalSecret
metadata:
  name: es-authorizedsshkeys-{{ $identifier }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  refreshInterval: 90s
  secretStoreRef:
    name: {{ $.Values.secretStore.name }}
    kind: {{ $.Values.secretStore.kind }}
  target:
    name: authorizedsshkeys-{{ $identifier }}
    template:
  data:
    - secretKey: key
      remoteRef:
        key: {{ coalesce $vmr.sshsecret $def.sshsecret }}
        property: {{ coalesce $vmr.sshpubkeyfield $def.sshpubkeyfield }}
---
apiVersion: v1
items:
- apiVersion: kubevirt.io/v1
  kind: VirtualMachine
  metadata:
    annotations:
      vm.kubevirt.io/validations: |
        [
          {
            "name": "minimal-required-memory",
            "path": "jsonpath::.spec.domain.resources.requests.memory",
            "rule": "integer",
            "message": "This VM requires more memory.",
            "min": 1610612736
          }
        ]
      argocd.argoproj.io/sync-wave: "2"
      argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
      {{- range $ann_k, $ann_v := (coalesce $vmr.extraAnnotations $def.extraAnnotations nil) }}
      {{ $ann_k }}: {{ $ann_v }}
      {{- end }}
    labels:
      app: {{ $identifier }}
      edge-gitops-role: {{ $vmr.role }}
      vm.kubevirt.io/template: {{ coalesce $vmr.template $def.template }}
      vm.kubevirt.io/template.revision: "1"
      vm.kubevirt.io/template.version: v0.19.4
      {{- range $lbl_k, $lbl_v := (coalesce $vmr.extraLabels $def.extraLabels nil) }}
      {{ $lbl_k }}: {{ $lbl_v }}
      {{- end }}
    name: {{ $identifier }}
  spec:
    dataVolumeTemplates:
    - apiVersion: cdi.kubevirt.io/v1beta1
      kind: DataVolume
      metadata:
        name: {{ $identifier }}
      spec:
        sourceRef:
          kind: DataSource
          name: {{ coalesce $vmr.dataSource $def.dataSource $vmr.os $def.os }}
          namespace: openshift-virtualization-os-images
        pvc:
          accessModes:
            - {{ coalesce $vmr.accessMode $def.accessMode }}
          resources:
            requests:
              storage: {{ coalesce $vmr.storage $def.storage }}
          storageClassName: {{ coalesce $vmr.storageClassName $def.storageClassName }}
          volumeMode: {{ coalesce $vmr.volumeMode $def.volumeMode }}
    running: true
    template:
      metadata:
        annotations:
          vm.kubevirt.io/flavor: {{ coalesce $vmr.flavor $def.flavor }}
          vm.kubevirt.io/os: {{ coalesce $vmr.os $def.os }}
          vm.kubevirt.io/workload: {{ coalesce $vmr.workload $def.workload }}
        labels:
          kubevirt.io/domain: {{ $identifier }}
          kubevirt.io/size: {{ coalesce $vmr.flavor $def.flavor }}
          vm.kubevirt.io/name: {{ $identifier }}
      spec:
        accessCredentials:
          - sshPublicKey:
              propagationMethod:
                configDrive: {}
              source:
                secret:
                  secretName: authorizedsshkeys-{{ $identifier }}
        domain:
          cpu:
            cores: {{ coalesce $vmr.cores $def.cores }}
            sockets: {{ coalesce $vmr.sockets $def.sockets }}
            threads: {{ coalesce $vmr.threads $def.threads }}
          devices:
            disks:
            - disk:
                bus: virtio
              name: {{ $identifier }}
            - disk:
                bus: virtio
              name: cloudinitdisk
            inputs:
            - bus: virtio
              name: tablet
              type: tablet
            interfaces:
            - masquerade: {}
              name: default
            networkInterfaceMultiqueue: true
            rng: {}
          machine:
            type: {{ coalesce $vmr.machineType $def.machineType }}
          resources:
            requests:
              memory: {{ coalesce $vmr.memory $def.memory }}
        evictionStrategy: LiveMigrate
        networks:
        - name: default
          pod: {}
        terminationGracePeriodSeconds: 180
        volumes:
        - dataVolume:
            name: {{ $identifier }}
          name: {{ $identifier }}
        - name: cloudinitdisk
          cloudInitConfigDrive:
            secretRef:
              name: cloudinit-{{ $vmr.role }}
- apiVersion: v1
  kind: Service
  metadata:
    name: {{ $identifier }}
    annotations:
      argocd.argoproj.io/sync-wave: "2"
    labels:
      app: {{ $identifier }}
      edge-gitops-role: {{ $vmr.role }}
  spec:
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports: {{ (coalesce $vmr.ports $def.ports) | toPrettyJson }}
    selector:
      vm.kubevirt.io/name: {{ $identifier }}
    sessionAffinity: None
    type: NodePort
kind: List
metadata: {}
{{- end }}
{{- end }}
